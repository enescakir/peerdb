name: Build & Test UI

on:
  push:
    branches:
      # - main
      - build-test
  pull_request:
    branches:
      - main

jobs:
  build-test:
    name: Build & Test UI
    strategy:
      matrix:
        # runner: [ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud]
        runner: [ubicloud, ubicloud, ubuntu-latest]
        # runner: [ubicloud, ubicloud, ubicloud, ubicloud-standard-4, ubicloud-standard-4, ubicloud-standard-4, ubicloud-standard-8, ubicloud-standard-8, ubicloud-standard-8, ubicloud-standard-16, ubicloud-standard-16, ubicloud-standard-16]
        # runner: [ubicloud-standard-16-arm, ubicloud-standard-16-arm, ubicloud-standard-16-arm]
        # runner: [ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud, ubicloud]
        # runner: [ubicloud, ubicloud, ubicloud, ubicloud, ubicloud-standard-4, ubicloud-standard-4, ubicloud-standard-4]
        # runner: [ubicloud-standard-16-ubuntu-2004, ubicloud-standard-16-ubuntu-2004, ubicloud-standard-16-ubuntu-2004, ubicloud-standard-16-ubuntu-2004, ubicloud-standard-16-ubuntu-2004, ubicloud-standard-16-ubuntu-2004, ubicloud-standard-16-ubuntu-2004, ubicloud-standard-16-ubuntu-2004, ubicloud-standard-16-ubuntu-2004, ubicloud-standard-16-ubuntu-2004]
        # runner: [ubicloud-arm, ubicloud-arm, ubicloud-arm, ubicloud-arm, ubicloud-arm, ubicloud-arm, ubicloud-arm, ubicloud-arm, ubicloud-arm, ubicloud-arm, ubicloud-arm]

    runs-on: ${{ matrix.runner }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

        
      - name: Add Hetzner apt mirror
        run: |
          sudo bash -c 'cat <<EOT > /etc/apt/sources.list.d/hetzner.list
          # Packages and Updates from the Hetzner Ubuntu Mirror
          deb http://mirror.hetzner.com/ubuntu/packages jammy           main restricted universe multiverse
          deb http://mirror.hetzner.com/ubuntu/packages jammy-updates   main restricted universe multiverse
          deb http://mirror.hetzner.com/ubuntu/packages jammy-backports main restricted universe multiverse
          deb http://mirror.hetzner.com/ubuntu/packages jammy-security  main restricted universe multiverse
          EOT'

          echo "http://mirror.hetzner.com/ubuntu/ priority:0" | sudo tee -a /etc/apt/apt-mirrors.txt

          sudo apt-get update

      - name: sudo apt-get update
        run: sudo apt-get update

      - name: sudo fsck -nf
        run: sudo fsck -nf

      - name: uname -mr
        run: uname -mr

      - name: lsb_release -a
        run: lsb_release -a

      - name: printenv
        run: printenv

      - name: ls -lah
        run: ls -lah

      - name: docker run -d -v "$(pwd)":/workspace --name alpine alpine tail -f /dev/null
        run: docker run -d -v "$(pwd)":/workspace --name alpine alpine tail -f /dev/null

      - name: docker exec alpine ls -lah
        run: docker exec alpine ls -lah

      - name: docker exec alpine ls -lah /workspace
        run: docker exec alpine ls -lah /workspace

      - name: docker exec alpine touch /workspace/test.txt
        run: docker exec alpine touch /workspace/test.txt

      - name: docker exec alpine ls -lah /workspace
        run: docker exec alpine ls -lah /workspace

      - name: cat /etc/group
        run: cat /etc/group

      - name: groups runner
        run: groups runner

      - name: free -h
        run: free -h

      # - name: ls -lah /home/runner/
      #   run: ls -lah /home/runner/

      # - name: ls -lah /home/runner/.docker
      #   run: ls -lah /home/runner/.docker

      # - name: cat /home/runner/.docker/config.json
      #   run: cat /home/runner/.docker/config.json 2>/dev/null

      # - name: sleep
      #   run: sleep 1000000000000

      # - name: checkout
      #   uses: actions/checkout@v3

      # - name: Install Node.js dependencies
      #   working-directory: ui
      #   run: yarn install --frozen-lockfile

      # - name: Build
      #   working-directory: ui
      #   run: yarn build

      # - name: install fio
      #   run: |
      #     sudo apt-get -y install fio

      # - name: run fio
      #   run: |
      #     sudo fio --filename=./f --size=2GB --direct=1 --rw=randrw --bs=4k --ioengine=libaio \
      #       --iodepth=256 --runtime=30 --numjobs=4 --time_based --group_reporting \
      #       --name=iops-test-job --eta-newline=1